SUBROUTINE write_header(ntuvonline)
!------------------------------------------------------------------------

!     -- DESCRIPTION

!     Write headers of subroutines

!     FEXCHEM.F    : chemical production terms (P-Lc).
!     JACDCHEMDC.F : Jacobian Matrix (d/dc(P-Lc)).
!     KINETIC.F    : kinetic rate k.
!     RATES.F      : reaction rates w.
!     DRATEDC.F    : derivatives dw/dc.
!     FEXPROD.F    : production terms P.
!     FEXLOSS.F    : loss terms L.
!------------------------------------------------------------------------

!     -- INPUT VARIABLES

!     -- INPUT/OUTPUT VARIABLES

!     -- OUTPUT VARIABLES

!------------------------------------------------------------------------

!     -- REMARKS

!     Label 300: blank line.
!     Label 150: comments.
!     Label 200: C-------...
!------------------------------------------------------------------------

!     -- MODIFICATIONS

!------------------------------------------------------------------------

!     -- AUTHOR(S)

!     Bruno Sportisse, CEREA, 2003.

!------------------------------------------------------------------------
IMPLICIT NONE
INCLUDE 'nficfort'
INCLUDE 'parametre'

INTEGER, INTENT(IN)                  :: ntuvonline

INTEGER :: nwrite


!     Routine kinetic.f90
nfick=ipiste
ipiste=ipiste+1
OPEN(nfick,FILE='chem_spack_kinetic.f90',STATUS='new')
nwrite=nfick

IF(ntuvonline == 0) THEN
  WRITE(nwrite,401)
ELSE
  WRITE(nwrite,400)
END IF
400  FORMAT(3X,'SUBROUTINE kinetic(jppj,Jphoto,rk,temp,xlw,Press,att,ijkbeg,ijkend)')

401  FORMAT(3X,'SUBROUTINE kinetic(jppj,Jphoto,rk,temp,xlw,Press,cosz,att,ijkbeg,ijkend)')
WRITE(nwrite,300)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,402)
402  FORMAT('!',5X,'-- DESCRIPTION')
WRITE(nwrite,150)
WRITE(nwrite,403)
403  FORMAT('!',5X,'This routine computes the kinetic rates',  &
    ' for the gas-phase.')
WRITE(nwrite,404)
404  FORMAT('!     This routine is automatically generated by SPACK.')
WRITE(nwrite,250)filemeca
WRITE(nwrite,251)filespecies
250  FORMAT('!     Mechanism: ',a20)
251  FORMAT('!     Species: ',a20)
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,405)
405  FORMAT('!     -- INPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,406)
406  FORMAT('!     TEMP: temperature ([K]).')
WRITE(nwrite,407)
407  FORMAT('!     XLW: water massic fraction.')
WRITE(nwrite,408)
408  FORMAT('!     PRESS: pressure ([Pa]).')
IF(ntuvonline == 0) WRITE(nwrite,409)
409  FORMAT('!     AZI: zenithal angle ([degree]).')
WRITE(nwrite,410)
410  FORMAT('!     ATT: attenuation variable.')
WRITE(nwrite,150)
WRITE(nwrite,413)
413  FORMAT('!     -- INPUT/OUTPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,414)
414  FORMAT('!     -- OUTPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,415)
415  FORMAT('!     RK: kinetic rates.')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,416)
416  FORMAT('!     -- REMARKS')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,417)
417  FORMAT('!     -- MODIFICATIONS')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,418)
418  FORMAT('!     -- AUTHOR(S)')
WRITE(nwrite,150)
WRITE(nwrite,419)
419  FORMAT('!     SPACK.')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,FMT='(A)') '  USE chem1_list, ONLY: nr'
WRITE(nwrite,300)
!      write(nwrite,420)
420  FORMAT('      IMPLICIT NONE')
WRITE(nwrite,300)
WRITE(nwrite,421)
421  FORMAT('!     -- INCLUDE FILES')
!LFR WRITE(nwrite,111)
!LFR WRITE(nwrite,222)
!LFR WRITE(nwrite,333)
!LFR IF(ntuvonline == 1) WRITE(nwrite,555)
!      write(nwrite,422)
! 422  format('!     PARADOM: parameters for all forced fields.')
!      write(nwrite,423)
! 423  format('!     PARACHEM: parameters for sizes of chemical',
!     2     ' arrays.')
!     write(nwrite,424)
! 424  format('!     COMUSEGEN: flags and parameters for numerics.')
!     write(nwrite,425)
! 425  format('!     COMDATAPROC: global variables for chemical',
!     2     'data (e.g. molar mass).')
!      write(nwrite,426)
! 426  format('!     COMCHEM: global variables for chemical species.')
WRITE(nwrite,300)
!      write(nwrite,427)
! 427  format('      INCLUDE ''PARACHEM.INC'' ')
!      write(nwrite,428)
! 428  format('      INCLUDE ''COMUSEPROC.INC'' ')
!      write(nwrite,429)
! 429  format('      INCLUDE ''PARADOM.INC''  ')
!     write(nwrite,430)
! 430  format('      INCLUDE ''COMDATAPROC.INC'' ')
!     write(nwrite,431)
! 431  format('      INCLUDE ''COMCHEM.INC'' ')
WRITE(nwrite,300)
WRITE(nwrite,FMT='(A)') '      INTEGER,INTENT(IN) :: jppj,ijkbeg,ijkend'
WRITE(nwrite,FMT='(A)') '      REAL,INTENT(IN) ::  xlw(ijkbeg:ijkend),att,cosz(ijkbeg:ijkend)'
WRITE(nwrite,FMT='(A)') '      REAL,INTENT(IN) ::  temp(ijkbeg:ijkend),Press(ijkbeg:ijkend)'
WRITE(nwrite,FMT='(A)') '      REAL,INTENT(OUT) ::  rk(ijkbeg:ijkend,nr)'

IF(ntuvonline == 0) THEN
  WRITE(nwrite,FMT='(A)') '      REAL,DIMENSION(ijkbeg:ijkend) ::  Effko,Rapk,facteur'
  WRITE(nwrite,FMT='(A)') '      REAL,DIMENSION(ijkbeg:ijkend) :: YlH2O,SumM,azi(ijkbeg:ijkend)'
  WRITE(nwrite,FMT='(A)') '      REAL,INTENT(IN) ::  Jphoto(ijkbeg:ijkend,jppj)'
ELSE
  WRITE(nwrite,FMT='(A)') '      REAL,DIMENSION(ijkbeg:ijkend) ::  Effko,Rapk,facteur'
  WRITE(nwrite,FMT='(A)') '      REAL,DIMENSION(ijkbeg:ijkend) :: YlH2O,SumM,azi(ijkbeg:ijkend)'
  WRITE(nwrite,FMT='(A)') '      REAL,INTENT(IN) ::  Jphoto(ijkbeg:ijkend,jppj)'
END IF
WRITE(nwrite,300)
WRITE(nwrite,438)
438  FORMAT('!     Compute third body.')
WRITE(nwrite,439)
439  FORMAT('!     Conversion = Avogadro*1d-6/Perfect gas constant.')
WRITE(nwrite,440)
440  FORMAT('!     PRESS in Pascal, SUMM in molecules/cm3,',  &
    ' TEMP in Kelvin')
WRITE(nwrite,300)
WRITE(nwrite,FMT='(A)') '      DO ijk=ijkbeg,ijkend'
WRITE(nwrite,FMT='(A)') '        SumM(ijk) = Press(ijk) * 7.243D16 / temp(ijk)'
WRITE(nwrite,FMT='(A)') '      END DO'
WRITE(nwrite,300)
WRITE(nwrite,442)
442  FORMAT('!     Number of water molecules computed from',  &
    ' the massic fraction')
WRITE(nwrite,443)
443  FORMAT('!     (absolute humidity)')
WRITE(nwrite,300)
WRITE(nwrite,FMT='(A)') '      DO ijk=ijkbeg,ijkend'
WRITE(nwrite,FMT='(A)') '         YlH2O(ijk) = 29.d0*SumM(ijk)*xlw(ijk)/(18.d0+11.d0*xlw(ijk))'
WRITE(nwrite,FMT='(A)') '      END DO'
WRITE(nwrite,300)
WRITE(nwrite,445)
445  FORMAT('!     For the zenithal angle at tropics')
WRITE(nwrite,300)
IF(ntuvonline == 0) WRITE(nwrite,446)
446  FORMAT('      azi=abs(acos(cosz)*180.0/3.1415926) !From cosz obtain angle azi in degrees')
WRITE(nwrite,300)
WRITE(nwrite,300)
WRITE(nwrite,FMT='(A)') '       DO ijk=ijkbeg,ijkend'

!     Routine fexchem.f90
nficf=ipiste
ipiste=ipiste+1
OPEN(nficf,FILE='chem_spack_fexchem.f90',STATUS='new')
nwrite=nficf
WRITE(nwrite,FMT='(A)') '  '
WRITE(nwrite,FMT='(A)') '  '

WRITE(nwrite,501)
!501  FORMAT(3X,'SUBROUTINE fexchem(y,rk,ZCsourc,chem,ngas,lsourc,ijkbegin,ijkend)')
501  FORMAT(3X,'SUBROUTINE fexchem(y,rk,chem,ngas,ijkbegin,ijkend)')
WRITE(nwrite,300)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,502)
502  FORMAT('!',5X,'-- DESCRIPTION')
WRITE(nwrite,150)
WRITE(nwrite,503)
503  FORMAT('!',5X,'This routine computes the chemical production', ' term.')
WRITE(nwrite,504)
504  FORMAT('!     This routine is automatically generated by SPACK.')
WRITE(nwrite,250)filemeca
WRITE(nwrite,251)filespecies
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,505)
505  FORMAT('!     -- INPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,506)
506  FORMAT('!     Y: chemical concentrations.')
WRITE(nwrite,415)
!     415  format('!     RK: kinetic rates.')
507  FORMAT('!     W: reaction rates.')
WRITE(nwrite,508)
508  FORMAT('!     ZCSOURC: volumic emissions.')
WRITE(nwrite,150)
WRITE(nwrite,513)
513  FORMAT('!     -- INPUT/OUTPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,514)
514  FORMAT('!     -- OUTPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,515)
515  FORMAT('!     CHEM: array of chemical production terms.')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,516)
516  FORMAT('!     -- REMARKS')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,517)
517  FORMAT('!     -- MODIFICATIONS')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,518)
518  FORMAT('!     -- AUTHOR(S)')
WRITE(nwrite,150)
WRITE(nwrite,519)
519  FORMAT('!     SPACK.')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,300)
WRITE(nwrite,FMT='(A)') '       USE chem1_list, ONLY: nr'
WRITE(nwrite,FMT='(A)') '       IMPLICIT NONE'

!      write(nwrite,520)
520  FORMAT('      IMPLICIT NONE')
WRITE(nwrite,300)
!WRITE(nwrite,521)
!521  FORMAT('!     -- INCLUDE FILES')

!LFR WRITE(nwrite,111)
!LFR WRITE(nwrite,222)
!LFR WRITE(nwrite,333)

!      write(nwrite,523)
! 523  format('!     PARACHEM: parameters for sizes of chemical',
!     2     ' arrays.')
!     write(nwrite,524)
! 524  format('!     COMUSEGEN: flags and parameters for numerics.')
!     write(nwrite,525)
! 525  format('!     PARADOM: parameters for all forced fields.')
WRITE(nwrite,300)
!      write(nwrite,527)
! 527  format('      INCLUDE ''PARACHEM.INC'' ')
!      write(nwrite,528)
! 528  format('      INCLUDE ''COMUSEGEN.INC'' ')
!      write(nwrite,529)
! 529  format('      INCLUDE ''PARADOM.INC''  ')
WRITE(nwrite,300)
WRITE(nwrite,FMT='(A)') '      INTEGER,INTENT(IN) :: ngas,ijkbegin,ijkend'
!WRITE(nwrite,FMT='(A)') '      LOGICAL,INTENT(IN) :: lsourc !Volumic source terms'
WRITE(nwrite,FMT='(A)') '      REAL,INTENT(IN)  :: rk(ijkbegin:ijkend,nr)'
WRITE(nwrite,FMT='(A)') '      REAL,INTENT(IN)  :: y(ijkbegin:ijkend,ngas)'
!WRITE(nwrite,FMT='(A)') '      REAL,INTENT(IN)  :: ZCsourc(ijkbegin:ijkend,NGAS)'
WRITE(nwrite,FMT='(A)') '      REAL,INTENT(OUT) :: chem(ijkbegin:ijkend,NGAS)'
WRITE(nwrite,FMT='(A)') '      REAL :: w(ijkbegin:ijkend,nr)'
WRITE(nwrite,FMT='(A)') '      INTEGER ::  i,ijk'
WRITE(nwrite,300)
WRITE(nwrite,539)
539  FORMAT('       chem=0.d0')
WRITE(nwrite,300)
WRITE(nwrite,541)
541  FORMAT('!     Compute reaction rates.')
WRITE(nwrite,300)
WRITE(nwrite,542)
542  FORMAT('      call rates(rk,y,w,ngas,ijkbegin,ijkend)')
WRITE(nwrite,300)
WRITE(nwrite,543)
543  FORMAT('!     Chemical production terms.')
WRITE(nwrite,300)
WRITE(nwrite,300)
WRITE(nwrite,FMT='(A)') '      DO ijk=ijkbegin,ijkend'
!     Routine jacdchemdc.f90
nficj=ipiste
ipiste=ipiste+1
OPEN(nficj,FILE='chem_spack_jacdchemdc.f90',STATUS='new')
nwrite=nficj
WRITE(nwrite,FMT='(A)') '  '
WRITE(nwrite,FMT='(A)') '  '

WRITE(nwrite,601)
601  FORMAT(3X,'SUBROUTINE jacdchemdc(y,rk,JacC,ngas,ijkbeg,ijkend)')
WRITE(nwrite,300)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,602)
602  FORMAT('!',5X,'-- DESCRIPTION')
WRITE(nwrite,150)
WRITE(nwrite,603)
603  FORMAT('!',5X,'This routine computes the Jacobian matrix',  &
    ' for the gas-phase.')
WRITE(nwrite,604)
604  FORMAT('!     This routine is automatically generated by SPACK.')
WRITE(nwrite,250)filemeca
WRITE(nwrite,251)filespecies
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,605)
605  FORMAT('!     -- INPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,606)
606  FORMAT('!     Y: chemical concentrations.')
WRITE(nwrite,415)
!     415  format('!     RK: kinetic rates.')
607  FORMAT('!     DW: derivative of reaction rates wrt Y.')
WRITE(nwrite,150)
WRITE(nwrite,613)
613  FORMAT('!     -- INPUT/OUTPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,614)
614  FORMAT('!     -- OUTPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,615)
615  FORMAT('!     JACC: Jacobian matrix.')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,616)
616  FORMAT('!     -- REMARKS')
WRITE(nwrite,150)
WRITE(nwrite,609)
609  FORMAT('!     The matrix JACC could be stored in a ',  &
    'low-dimensional vector.')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,617)
617  FORMAT('!     -- MODIFICATIONS')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,618)
618  FORMAT('!     -- AUTHOR(S)')
WRITE(nwrite,150)
WRITE(nwrite,619)
619  FORMAT('!     SPACK.')
WRITE(nwrite,150)
WRITE(nwrite,FMT='(A)') '  USE chem1_list, ONLY: nr'
WRITE(nwrite,200)
WRITE(nwrite,300)
!      write(nwrite,620)
620  FORMAT('      implicit none')
WRITE(nwrite,300)
WRITE(nwrite,621)
621  FORMAT('!     -- INCLUDE FILES')

!LFR WRITE(nwrite,111)
!LFR WRITE(nwrite,222)
!LFR WRITE(nwrite,333)

!      write(nwrite,623)
! 623  format('!     PARACHEM: parameters for sizes of chemical',
!     2     ' arrays.')
!      write(nwrite,625)
! 625  format('!     PARADOM: parameters for all forced fields.')
!      write(nwrite,300)
!      write(nwrite,627)
! 627  format('      INCLUDE ''PARACHEM.INC'' ')
!      write(nwrite,629)
! 629  format('      INCLUDE ''PARADOM.INC''  ')
WRITE(nwrite,300)
WRITE(nwrite,FMT='(A)') '      INTEGER,INTENT(IN) :: ngas,ijkbeg,ijkend'
WRITE(nwrite,FMT='(A)') '      REAL, INTENT(IN) :: rk(ijkbeg:ijkend,nr),y(ijkbeg:ijkend,NGAS)'
WRITE(nwrite,FMT='(A)') '      REAL, INTENT(OUT) :: JacC(ijkbeg:ijkend,NGAS,NGAS)'
WRITE(nwrite,FMT='(A)') '      REAL :: dw(ijkbeg:ijkend,nr,NGAS)'
WRITE(nwrite,FMT='(A)') '      INTEGER :: i,j,ijk'

WRITE(nwrite,300)
WRITE(nwrite,637)
637  FORMAT('        JacC=0.d0')
WRITE(nwrite,300)
WRITE(nwrite,640)
640  FORMAT('      CALL dratedc(rk,y,dw,ngas,ijkbeg,ijkend)')
WRITE(nwrite,300)
WRITE(nwrite,FMT='(A)') '      DO ijk=ijkbeg,ijkend'

!     Routine fexloss.f90
nficloss=ipiste
ipiste=ipiste+1
OPEN(nficloss,FILE='chem_spack_fexloss.f90',STATUS='new')
nwrite=nficloss
WRITE(nwrite,FMT='(A)') '  '
WRITE(nwrite,FMT='(A)') '  '

WRITE(nwrite,701)
701  FORMAT(3X,'SUBROUTINE fexloss(dw,loss,ngas,ijkbegin,ijkend)')
WRITE(nwrite,300)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,502)
!     502  format('!',5x,'-- DESCRIPTION')
WRITE(nwrite,150)
WRITE(nwrite,703)
703  FORMAT('!',5X,'This routine computes the chemical loss ',  &
    ' term L in a P-Lc formulation.')
WRITE(nwrite,504)
!     504  format('!     This routine is automatically generated by SPACK.')
WRITE(nwrite,250)filemeca
WRITE(nwrite,251)filespecies
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,505)
!     505  format('!     -- INPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,607)
!     607  format('!     DW: derivative of reaction rates wrt Y.')
WRITE(nwrite,150)
WRITE(nwrite,513)
!     513  format('!     -- INPUT/OUTPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,514)
!     514  format('!     -- OUTPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,715)
715  FORMAT('!     LOSS: array of chemical loss terms.')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,516)
!     516  format('!     -- REMARKS')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,517)
!     517  format('!     -- MODIFICATIONS')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,518)
!     518  format('!     -- AUTHOR(S)')
WRITE(nwrite,150)
WRITE(nwrite,519)
!     519  format('!     SPACK.')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,300)
!      write(nwrite,520)
!     520  format('      implicit none')
WRITE(nwrite,300)
WRITE(nwrite,521)
!     521  format('!     -- INCLUDE FILES')
!LFR WRITE(nwrite,111)
!LFR WRITE(nwrite,222)
!LFR WRITE(nwrite,333)

!      write(nwrite,523)
!     523  format('!     PARACHEM: parameters for sizes of chemical',
!     2     ' arrays.')
!     write(nwrite,524)
!     524  format('!     COMUSEGEN: flags and parameters for numerics.')
!      write(nwrite,525)
!     525  format('!     PARADOM: parameters for all forced fields.')
WRITE(nwrite,300)
!      write(nwrite,527)
!     527  format('      INCLUDE ''PARACHEM.INC'' ')
!      write(nwrite,528)
!     528  format('      INCLUDE ''COMUSE.INC'' ')
!      write(nwrite,529)
!     529  format('      INCLUDE ''PARADOM.INC''  ')
WRITE(nwrite,FMT='(A)') '       USE chem1_list, ONLY: nr'
WRITE(nwrite,FMT='(A)') '       IMPLICIT NONE'
WRITE(nwrite,300)
WRITE(nwrite,FMT='(A)') '      INTEGER,INTENT(IN) :: NGAS,ijkbegin,ijkend'
WRITE(nwrite,FMT='(A)') '      REAL, INTENT(IN)  :: dw(ijkbegin:ijkend,nr,NGAS)'
WRITE(nwrite,FMT='(A)') '      REAL, INTENT(OUT) :: loss(ijkbegin:ijkend,NGAS)'
WRITE(nwrite,FMT='(A)') '      INTEGER :: ijk'


WRITE(nwrite,FMT='(A)') ''
WRITE(nwrite,FMT='(A)') '       loss=0.d0'

WRITE(nwrite,300)
WRITE(nwrite,741)
741  FORMAT('!     Chemical loss terms.')
WRITE(nwrite,300)
WRITE(nwrite,FMT='(A)') '      DO ijk=ijkbegin,ijkend'

!     Routine fexprod.f90
nficprod=ipiste
ipiste=ipiste+1
OPEN(nficprod,FILE='chem_spack_fexprod.f90',STATUS='new')
nwrite=nficprod
WRITE(nwrite,FMT='(A)') '  '
WRITE(nwrite,FMT='(A)') '  '

WRITE(nwrite,801)
801  FORMAT(3X,'SUBROUTINE fexprod(w,prod,ngas,ijkbegin,ijkend)')
WRITE(nwrite,300)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,502)
!     502  format('!',5x,'-- DESCRIPTION')
WRITE(nwrite,150)
WRITE(nwrite,803)
803  FORMAT('!',5X,'This routine computes the production ',  &
    ' term P in a P-Lc formulation.')
WRITE(nwrite,504)
!     504  format('!     This routine is automatically generated by SPACK.')
WRITE(nwrite,250)filemeca
WRITE(nwrite,251)filespecies
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,505)
!     505  format('!     -- INPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,507)
!     507  format('!     W: reaction rates.')
WRITE(nwrite,150)
WRITE(nwrite,513)
!     513  format('!     -- INPUT/OUTPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,514)
!     514  format('!     -- OUTPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,815)
815  FORMAT('!     PROD: array of chemical production terms.')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,516)
!     516  format('!     -- REMARKS')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,517)
!     517  format('!     -- MODIFICATIONS')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,518)
!     518  format('!     -- AUTHOR(S)')
WRITE(nwrite,150)
WRITE(nwrite,519)
!     519  format('!     SPACK.')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,300)
!      write(nwrite,520)
!     520  format('      implicit none')
WRITE(nwrite,300)
WRITE(nwrite,521)
521  format('!     -- INCLUDE FILES')
!LFR WRITE(nwrite,111)
!LFR WRITE(nwrite,222)
!LFR WRITE(nwrite,333)

!      write(nwrite,523)
!     523  format('!     PARACHEM: parameters for sizes of chemical',
!     2     ' arrays.')
!     write(nwrite,524)
!     524  format('!     COMUSEGEN: flags and parameters for numerics.')
!      write(nwrite,525)
!     525  format('!     PARADOM: parameters for all forced fields.')
WRITE(nwrite,300)
!      write(nwrite,527)
!     527  format('      INCLUDE ''PARACHEM.INC'' ')
!      write(nwrite,528)
!     528  format('      INCLUDE ''COMUSEGEN.INC'' ')
!      write(nwrite,529)
!     529  format('      INCLUDE ''PARADOM.INC''  ')
WRITE(nwrite,FMT='(A)') '       USE chem1_list, ONLY: nr'
WRITE(nwrite,FMT='(A)') '       IMPLICIT NONE'

WRITE(nwrite,300)

WRITE(nwrite,FMT='(A)') '  INTEGER,INTENT(IN) :: ngas,ijkbegin,ijkend'
WRITE(nwrite,FMT='(A)') '  REAL,INTENT(IN) :: w(ijkbegin:ijkend,nr)'
WRITE(nwrite,FMT='(A)') '  REAL,INTENT(OUT) :: prod(ijkbegin:ijkend,NGAS)'
WRITE(nwrite,FMT='(A)') '  INTEGER :: ijk'

WRITE(nwrite,300)
WRITE(nwrite,839)
839  FORMAT('       prod=0.0')
WRITE(nwrite,300)
WRITE(nwrite,841)
841  FORMAT('!     Chemical production terms.')
WRITE(nwrite,300)
WRITE(nwrite,FMT='(A)') '      DO ijk=ijkbegin,ijkend'

!     Routine rates.f90
nficw=ipiste
ipiste=ipiste+1
OPEN(nficw,FILE='chem_spack_rates.f90',STATUS='new')
nwrite=nficw
WRITE(nwrite,FMT='(A)') '  '
WRITE(nwrite,FMT='(A)') '  '

WRITE(nwrite,901)
901  FORMAT(3X,'SUBROUTINE rates(rk,y,w,ngas,ijkbeg,ijkend)')
WRITE(nwrite,300)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,502)
!     502  format('!',5x,'-- DESCRIPTION')
WRITE(nwrite,150)
WRITE(nwrite,902)
902  FORMAT('!',5X,'This routine computes the reaction rates.')
WRITE(nwrite,504)
!     504  format('!     This routine is automatically generated by SPACK.')
WRITE(nwrite,250)filemeca
WRITE(nwrite,251)filespecies
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,505)
!     505  format('!     -- INPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,903)
903  FORMAT('!     RK: kinetic rates.')
WRITE(nwrite,506)
!     506  format('!     Y: chemical concentrations.')
WRITE(nwrite,150)
WRITE(nwrite,513)
!     513  format('!     -- INPUT/OUTPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,514)
!     514  format('!     -- OUTPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,507)
!     507  format('!     W: reaction rates.')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,516)
!     516  format('!     -- REMARKS')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,517)
!     517  format('!     -- MODIFICATIONS')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,518)
!     518  format('!     -- AUTHOR(S)')
WRITE(nwrite,150)
WRITE(nwrite,519)
!     519  format('!     SPACK.')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,300)
!      write(nwrite,520)
!     520  format('      implicit none')
WRITE(nwrite,300)
WRITE(nwrite,521)
!     521  format('!     -- INCLUDE FILES')
!LFR WRITE(nwrite,111)
!LFR WRITE(nwrite,222)
!LFR WRITE(nwrite,333)
WRITE(nwrite,FMT='(A)') '  USE chem1_list, ONLY: nr'

!      write(nwrite,523)
!     523  format('!     PARACHEM: parameters for sizes of chemical',
!     2     ' arrays.')
!     write(nwrite,524)
!     524  format('!     COMUSEGEN: flags and parameters for numerics.')
!      write(nwrite,525)
!     525  format('!     PARADOM: parameters for all forced fields.')
WRITE(nwrite,300)
!      write(nwrite,527)
!      527  format('      INCLUDE ''PARACHEM.INC'' ')
!      write(nwrite,528)
!     528  format('      INCLUDE ''COMUSEGEN.INC'' ')
!     write(nwrite,529)
!     529  format('      INCLUDE ''PARADOM.INC''  ')
WRITE(nwrite,300)
WRITE(nwrite,FMT='(A)') '      INTEGER,INTENT(IN) :: ngas,ijkbeg,ijkend'
WRITE(nwrite,FMT='(A)') '      REAL,INTENT(IN) :: rk(ijkbeg:ijkend,nr),y(ijkbeg:ijkend,NGAS)'
WRITE(nwrite,FMT='(A)') '      REAL,INTENT(OUT) :: w(ijkbeg:ijkend,nr)'
WRITE(nwrite,FMT='(A)') '      INTEGER :: ijk'
!     write(nwrite,537)
!     537  format('      integer i')
WRITE(nwrite,300)
WRITE(nwrite,FMT='(A)') '      DO ijk=ijkbeg,ijkend'
!     Routine dratedc.f
nficdw=ipiste
ipiste=ipiste+1
OPEN(nficdw,FILE='chem_spack_dratedc.f90',STATUS='new')
nwrite=nficdw
WRITE(nwrite,FMT='(A)') '  '
WRITE(nwrite,FMT='(A)') '  '

WRITE(nwrite,910)
910  FORMAT(3X,'SUBROUTINE dratedc(rk,y,dw,ngas,ijkbeg,ijkend)')
WRITE(nwrite,300)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,502)
!     502  format('!',5x,'-- DESCRIPTION')
WRITE(nwrite,150)
WRITE(nwrite,911)
911  FORMAT('!',5X,'This routine computes the derivative of reaction ',  &
    ' rates.')
WRITE(nwrite,504)
!     504  format('!     This routine is automatically generated by SPACK.')
WRITE(nwrite,250)filemeca
WRITE(nwrite,251)filespecies
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,505)
!     505  format('!     -- INPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,903)
!     903  format('!     RK: kinetic rates.')
WRITE(nwrite,506)
!     506  format('!     Y: chemical concentrations.')
WRITE(nwrite,150)
WRITE(nwrite,513)
!     513  format('!     -- INPUT/OUTPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,514)
!     514  format('!     -- OUTPUT VARIABLES')
WRITE(nwrite,150)
WRITE(nwrite,607)
!     607  format('!     DW: derivative of reaction rates wrt Y.')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,516)
!     516  format('!     -- REMARKS')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,517)
!     517  format('!     -- MODIFICATIONS')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,150)
WRITE(nwrite,518)
!     518  format('!     -- AUTHOR(S)')
WRITE(nwrite,150)
WRITE(nwrite,519)
!     519  format('!     SPACK.')
WRITE(nwrite,150)
WRITE(nwrite,200)
WRITE(nwrite,300)
!      write(nwrite,520)
!     520  format('      implicit none')
WRITE(nwrite,300)
WRITE(nwrite,521)
!     521  format('!     -- INCLUDE FILES')
WRITE(nwrite,FMT='(A)') '  USE chem1_list, ONLY: nr'

!LFR WRITE(nwrite,111)
!LFR WRITE(nwrite,222)
!LFR WRITE(nwrite,333)

!      write(nwrite,523)
!     523  format('!     PARACHEM: parameters for sizes of chemical',
!     2     ' arrays.')
!      write(nwrite,524)
!     524  format('!     COMUSEGEN: flags and parameters for numerics.')
!      write(nwrite,525)
!     525  format('!     PARADOM: parameters for all forced fields.')
WRITE(nwrite,300)
!      write(nwrite,527)
!     527  format('      INCLUDE ''PARACHEM.INC'' ')
!     write(nwrite,528)
!     528  format('      INCLUDE ''COMUSEGEN.INC'' ')
!      write(nwrite,529)
!     529  format('      INCLUDE ''PARADOM.INC''  ')
WRITE(nwrite,300)

WRITE(nwrite,FMT='(A)') '     INTEGER,INTENT(IN) :: ngas,ijkbeg,ijkend'			        
WRITE(nwrite,FMT='(A)') '     REAL,INTENT(IN) :: rk(ijkbeg:ijkend,nr),y(ijkbeg:ijkend,NGAS) '
WRITE(nwrite,FMT='(A)') '     REAL,INTENT(OUT) :: dw(ijkbeg:ijkend,nr,NGAS) '	        
WRITE(nwrite,FMT='(A)') '     INTEGER :: ijk'							        

!     write(nwrite,537)
!     537  format('      integer i')
WRITE(nwrite,300)
WRITE(nwrite,FMT='(A)') '     DO ijk=ijkbeg,ijkend'
!     File non_zero.dat
nficnz=ipiste
ipiste=ipiste+1
OPEN(nficnz,FILE='non_zero.dat',STATUS='new')
WRITE(nwrite,FMT='(A)') '  '
WRITE(nwrite,FMT='(A)') '  '

150  FORMAT('!',6X,a65)
200  FORMAT('!-----------------------------------',  &
    '-------------------------------------')
300  FORMAT(' ')

111  FORMAT('!      INCLUDE FILES only for CATT-BRAMS!!!! ')
222  FORMAT('      INCLUDE ''PARAMETRE'' ')
333  FORMAT('      INCLUDE ''FICCOM'' ')
555  FORMAT('      INCLUDE ''TUV.H'' ')


RETURN
END SUBROUTINE write_header
!------------------------------------------------------------------------

SUBROUTINE write_end
!------------------------------------------------------------------------

!     -- DESCRIPTION

!     Write end of subroutines fexchem.f90, jacdchemdc.f90 and kinetic.f90.
!------------------------------------------------------------------------

!     -- INPUT VARIABLES

!     -- INPUT/OUTPUT VARIABLES

!     -- OUTPUT VARIABLES

!------------------------------------------------------------------------

!     -- REMARKS

!     Label 300: blank line.
!     Label 150: comments.
!     Label 200: C-------...
!------------------------------------------------------------------------

!     -- MODIFICATIONS

!------------------------------------------------------------------------

!     -- AUTHOR(S)

!     Bruno Sportisse, CEREA, 2003.

!------------------------------------------------------------------------
INCLUDE 'nficfort'

!     Routine fexchem.f90
nwrite=nficf

WRITE(nwrite,FMT='(A)') '      END DO'
WRITE(nwrite,300)
WRITE(nwrite,101)
101  FORMAT('!     Volumic source terms.')
WRITE(nwrite,300)
!WRITE(nwrite,FMT='(A)') '        IF(LSOURC)THEN'
!WRITE(nwrite,FMT='(A)') '         chem=chem+ZCsourc'
!WRITE(nwrite,FMT='(A)') '      END IF'
  CALL write_end2(nwrite)
!     Routine kinetic.f90
  nwrite=nfick
  CALL write_end2(nwrite)
  
!     Routine jacdchemdc.f90
  nwrite=nficj
  CALL write_end2(nwrite)
  
!     Routine fexloss.f90
  nwrite=nficloss
  CALL write_end2(nwrite)
  
!     Routine fexprod.f90
  nwrite=nficprod
  CALL write_end2(nwrite)
  
!     Routine rates.f90
  nwrite=nficw
  CALL write_end2(nwrite)
  
!     Routine dratedc.f90
  nwrite=nficdw
  CALL write_end2(nwrite)
  
  
  
  150  FORMAT('!',6X,a65)
  200  FORMAT('!-----------------------------------',  &
      '-------------------------------------')
  300  FORMAT(' ')
  110  FORMAT(6X,'END SUBROUTINE')
  
  RETURN
END SUBROUTINE write_end

SUBROUTINE write_end2(nwrite)
  INCLUDE 'nficfort'

 INTEGER, INTENT(IN)                  :: nwrite
 CHARACTER(LEN=10) :: cnsub

 IF(nwrite==nficdw) cnsub='dratedc'
 IF(nwrite==nficw) cnsub='rates'
 IF(nwrite==nficprod) cnsub='fexprod'
 IF(nwrite==nficloss) cnsub='fexloss'
 IF(nwrite==nficj) cnsub='jacdchemdc'
 IF(nwrite==nfick) cnsub='kinetic'
 IF(nwrite==nficf) cnsub='fexchem' 

 IF(nwrite==nfick)  WRITE(nwrite,FMT='(A)')   '      END DO'
 IF(nwrite==nficj)  WRITE(nwrite,FMT='(A)')   '      END DO'
 IF(nwrite==nficw)  WRITE(nwrite,FMT='(A)')   '      END DO'
 IF(nwrite==nficdw) WRITE(nwrite,FMT='(A)')   '      END DO'
 IF(nwrite==nficprod) WRITE(nwrite,FMT='(A)') '      END DO'
 IF(nwrite==nficloss) WRITE(nwrite,FMT='(A)') '      END DO'
 WRITE(nwrite,300)
 WRITE(nwrite,FMT='(A)') '   END SUBROUTINE '//trim(cnsub)
 WRITE(nwrite,300)

150  FORMAT('!',6X,a65)
200  FORMAT('!-----------------------------------',  &
    '-------------------------------------')
300  FORMAT(' ')

END SUBROUTINE write_end2














